<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="ViewPagerIndicator">
        <!-- Style of the circle indicator. -->
        <attr name="vpiCirclePageIndicatorStyle" format="reference" />
    </declare-styleable>

    <!--<attr name="selectedColor" format="color"/>-->
    <!--<attr name="unselectedColor" format="color"/>-->

    <attr name="indicatorGravity">
        <!-- Push object to the top of its container, not changing its size. -->
        <flag name="top" value="0x30" />
        <!-- Push object to the bottom of its container, not changing its size. -->
        <flag name="bottom" value="0x50" />
        <!-- Push object to the left of its container, not changing its size. -->
        <flag name="left" value="0x03" />
        <!-- Push object to the right of its container, not changing its size. -->
        <flag name="right" value="0x05" />
        <!-- Place object in the vertical center of its container, not changing its size. -->
        <flag name="center_vertical" value="0x10" />
        <!-- Place object in the horizontal center of its container, not changing its size. -->
        <flag name="center_horizontal" value="0x01" />
        <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
        <flag name="center" value="0x11" />
        <!-- Push object to the beginning of its container, not changing its size. -->
        <flag name="start" value="0x00800003" />
        <!-- Push object to the end of its container, not changing its size. -->
        <flag name="end" value="0x00800005" />
    </attr>

    <attr name="indicatorOrientation">
        <enum name="horizontal" value="0" />
        <enum name="vertical" value="1" />
    </attr>

    <attr name="pageTransformer">
        <enum name="flow" value="0" />
        <enum name="depth" value="1" />
        <enum name="zoom" value="2" />
        <enum name="slide_over" value="3" />
    </attr>

    <attr name="centered" format="boolean" />
    <attr name="strokeWidth" format="dimension" />
    <attr name="slideInterval" format="integer" />
    <attr name="pageTransformInterval" format="integer" />
    <attr name="fillColor" format="color" />
    <attr name="pageColor" format="color" />
    <attr name="radius" format="dimension" />
    <attr name="snap" format="boolean" />
    <attr name="strokeColor" format="color" />
    <attr name="autoPlay" format="boolean" />
    <attr name="disableAutoPlayOnUserInteraction" format="boolean" />
    <attr name="indicatorMarginHorizontal" format="dimension" />
    <attr name="indicatorMarginVertical" format="dimension" />
    <attr name="animateOnBoundary" format="boolean" />

    <!-- Controls the initial visibility of the view.  -->
    <attr name="indicatorVisibility">
        <!-- Visible on screen; the default value. -->
        <enum name="visible" value="0" />
        <!-- Not displayed, but taken into account during layout (space is left for it). -->
        <enum name="invisible" value="4" />
        <!-- Completely hidden, as if the view had not been added. -->
        <enum name="gone" value="8" />
    </attr>

    <declare-styleable name="CirclePageIndicator">
        <!-- Whether or not the indicators should be centered. -->
        <attr name="centered" />
        <!-- Color of the filled circle that represents the current page. -->
        <attr name="fillColor" />
        <!-- Color of the filled circles that represents pages. -->
        <attr name="pageColor" />
        <!-- Orientation of the indicator. -->
        <attr name="android:orientation" />
        <!-- Radius of the circles. This is also the spacing between circles. -->
        <attr name="radius" />
        <!-- Whether or not the selected indicator snaps to the circles. -->
        <attr name="snap" />
        <!-- Color of the open circles. -->
        <attr name="strokeColor" />
        <!-- Width of the stroke used to draw the circles. -->
        <attr name="strokeWidth" />
        <!-- View background -->
        <attr name="android:background" />
    </declare-styleable>

    <declare-styleable name="CarouselView">
        <!-- Interval of the indicator to slide. -->
        <attr name="slideInterval" />
        <!-- Gravity of the indicator.  (Just like layout_gravity)-->
        <attr name="indicatorGravity" />
        <!-- Orientation of the indicator. -->
        <attr name="indicatorOrientation" />
        <!-- Color of the filled circle that represents the current page. -->
        <attr name="fillColor" />
        <!-- Color of the filled circles that represents pages. -->
        <attr name="pageColor" />
        <!-- Radius of the circles. This is also the spacing between circles. -->
        <attr name="radius" />
        <!-- Whether or not the selected indicator snaps to the circles. -->
        <attr name="snap" />
        <!-- Color of the open circles. -->
        <attr name="strokeColor" />
        <!-- Width of the stroke used to draw the circles. -->
        <attr name="strokeWidth" />
        <!-- Enable/Disable auto scrolling of views. default: true -->
        <attr name="autoPlay" />
        <!-- Disables auto scrolling when user interacts. default: false -->
        <attr name="disableAutoPlayOnUserInteraction" />
        <!-- Sets horizontal margin for Indicator in Carousel View. -->
        <attr name="indicatorMarginHorizontal" />
        <!-- Sets vertical margin for Indicator in Carousel View. -->
        <attr name="indicatorMarginVertical" />
        <!-- Sets speed at which page will slide from one to another in milliseconds. -->
        <attr name="pageTransformInterval" />
        <!-- Sets page transition animation. -->
        <attr name="pageTransformer" />
        <!-- Sets whether to animate transition from last position to first or not. -->
        <attr name="animateOnBoundary" />
        <!-- Indicator Visibility -->
        <attr name="indicatorVisibility" />


    </declare-styleable>

    <declare-styleable name="CircleIndicator">
        <attr name="ci_width" format="dimension"/>
        <attr name="ci_height" format="dimension"/>
        <attr name="ci_margin" format="dimension"/>
        <attr name="ci_animator" format="reference"/>
        <attr name="ci_animator_reverse" format="reference"/>
        <attr name="ci_drawable" format="reference"/>
        <attr name="ci_drawable_unselected" format="reference"/>

        <attr name="ci_orientation" format="enum">
            <!-- Defines an horizontal widget. -->
            <enum name="horizontal" value="0"/>
            <!-- Defines a vertical widget. -->
            <enum name="vertical" value="1"/>
        </attr>

        <attr name="ci_gravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30"/>
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50"/>
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03"/>
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05"/>
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10"/>
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70"/>
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01"/>
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07"/>
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11"/>
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77"/>
            <!-- Additional option that can be set to have the top and/or bottom edges of
            the child clipped to its container's bounds.
            The clip will be based on the vertical gravity: a top gravity will clip the bottom
            edge, a bottom gravity will clip the top edge, and neither will clip both edges. -->
            <flag name="clip_vertical" value="0x80"/>
            <!-- Additional option that can be set to have the left and/or right edges of
            the child clipped to its container's bounds.
            The clip will be based on the horizontal gravity: a left gravity will clip the right
            edge, a right gravity will clip the left edge, and neither will clip both edges. -->
            <flag name="clip_horizontal" value="0x08"/>
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003"/>
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005"/>
        </attr>

    </declare-styleable>

</resources>